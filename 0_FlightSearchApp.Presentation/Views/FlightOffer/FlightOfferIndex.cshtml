@using FlightSearchApp.Domain;

@{
    ViewData["Title"] = "<span>Flights offer</span>";
}

@section Styles {
    @{
        await Html.RenderPartialAsync("_DataTablesStyles");
    }
}

<div>
    <form id="frmFlightOffer" data-toggle="validator" autocomplete="off">
        <div class="row empty-row"></div>
        <div class="row">
            <div class="col-sm-2">
                <label class="control-label">Departure airport code</label>
                <div class="input-group width-100">
                    <input type="text" class="width-100 components" id="txtDepartureAirportCode" name="txtDepartureAirportCode" maxlength="3" data-val="true" pattern="[A-Za-z]+" oninput="this.value = this.value.toUpperCase()" />
                    <span class="text-danger field-validation-valid" data-valmsg-for="txtDepartureAirportCode" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="col-sm-2">
                <label class="control-label">Destination airport code</label>
                <div class="input-group width-100" style="width:100%">
                    <input type="text" class="width-100 components" id="txtDestinationAirportCode" name="txtDestinationAirportCode" maxlength="3" data-val="true" pattern="[A-Za-z]+" oninput="this.value = this.value.toUpperCase()" />
                    <span class="text-danger field-validation-valid" data-valmsg-for="txtDestinationAirportCode" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="col-sm-2">
                <label class="control-label">Departure date</label>
                <div class='input-group date date-picker' id='dtpDepartureDate'>
                    <input type="text" class="components" style="width:100%" id="txtDepartureDate" data-val="true" />
                    <span class="input-group-addon components">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                    <span class="text-danger field-validation-valid" data-valmsg-for="txtDepartureDate" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="col-sm-2">
                <label class="control-label">Return date</label>
                <div class='input-group date date-picker' id='dtpReturnDate'>
                    <input type="text" class="components" style="width:100%;" id="txtReturnDate" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            <div class="col-sm-2">
                <label class="control-label">Number of passengers</label>
                <div class="input-group width-100">
                    <input type="text" class="width-100 components whole-number-single-digit" id="txtPassengersNumber" name="txtPassengersNumber" data-val="true" />
                    <span class="text-danger field-validation-valid" data-valmsg-for="txtPassengersNumber" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="col-sm-2">
                <label class="control-label">Currency</label>
                <div class="input-group">
                    <select class="form-control select2" id="cboCurrency" name="cboCurrency" style="width:100%"></select>
                </div>
            </div>
        </div>
    </form>
    <div class="row empty-row"></div>
    <div class="row empty-row"></div>
    <div class="row">
        <div class="col-sm-6 text-left">
            <button class="btn synchronize-button" id="btnSynchronizeData"><i class="fa fa-cloud-download"></i>Synchronize data</button>
        </div>
        <div class="col-sm-6 text-right">
            <button class="btn reset-button" id="btnClear"><i class="fa fa-times"></i>Clear</button>
            <button class="btn search-button" id="btnSearch"><i class="fa fa-search"></i> Search</button>
        </div>
    </div>
    <div class="row empty-row"></div>
    <table id="dtFlightOffers" class="display compact cell-border dt" cellspacing="0" style="width:100%">
        <thead>
            <tr>
                <th>Departure airport</th>
                <th>Destination airport</th>
                <th>Departure date</th>
                <th>Return date</th>
                <th>Transfer numbers departure</th>
                <th>Transfer numbers return</th>
                <th>Passengers number</th>
                <th>Currency</th>
                <th>Total price</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

@section Scripts {
@{
    await Html.RenderPartialAsync("_DataTablesScripts");
}

<script src="~/plugins/bootstrap.datepicker/Scripts/bootstrap-datepicker.min.js"></script>

<script type="text/javascript">

    function flightOfferSynchronize() {
        //if (!$("#frmFlightOffer").valid()) {
        //    return false;
        //};
        var valid = validate();
        if (valid != ""){
            showMessage(valid);
            return false;
        }

        OpenPleaseWait();
        $.ajax({
            type: 'POST',
            url: '@Globals.GetAjaxPath(AjaxPath.FlightOfferSynchronize)',
            data: {
                originLocationCode: $("#txtDepartureAirportCode").val(),
                destinationLocationCode: $("#txtDestinationAirportCode").val(),
                departureDate: $("#txtDepartureDate").val(),
                returnDate: $("#txtReturnDate").val(),
                adults: $("#txtPassengersNumber").val(),
                currencyCode: $("#cboCurrency").select2('data')[0].text
            },
            dataType: 'text',
            cache: false,
            success: function (data) { 
                ClosePleaseWait();
                showMessage(data);
            },
            error: function (jqXHR, textStatus, exception) {
                ClosePleaseWait();
                showMessage(textStatus);
            }
        });
    }

    function flightOfferSearch() {
        //if (!$("#frmFlightOffer").valid()) {
        //    return false;
        //};

        var valid = validate();
        if (valid != "") {
            showMessage(valid);
            return false;
        }

        OpenPleaseWait();

        //$.ajax({
        //    type: 'GET',
        //    url: '@Globals.GetAjaxPath(AjaxPath.FlightOfferSearch)',
            //data: {
            //    originLocationCode: $("#txtDepartureAirportCode").val(),
            //    destinationLocationCode: $("#txtDestinationAirportCode").val(),
            //    departureDate: $("#txtDepartureDate").val(),
            //    returnDate: $("#txtReturnDate").val(),
            //    adults: $("#txtPassengersNumber").val(),
            //    currencyCode: $("#cboCurrency").select2('data')[0].text
            //},
        //    dataType: 'json',
        //    cache: false,
        //    success: function (data) {
        //        ClosePleaseWait();
        //        if (data.length == 0) {
        //            showMessage("There is no flight offers for the entered values! Try fetching the data first with the Synchronize data button.");
        //        }
        //        else {
        //            $('#dtFlightOffers').DataTable().clear().rows.add(data).draw();
        //        }
        //    },
        //    error: function (jqXHR, textStatus, exception) {
        //        showMessage(textStatus);
        //    }
        //});

            $('#dtFlightOffers').DataTable({
                columns: [
                    { width: "30px" },
                    { width: "30px" },
                    { width: "40px" },
                    { width: "40px" },
                    { width: "30px" },
                    { width: "30px" },
                    { width: "30px" },
                    { width: "20px" },
                    { width: "30px" }
                ],
                ajax: {
                    url: "@Globals.GetAjaxPath(AjaxPath.FlightOfferSearch)",
                    type: "POST",
                    data: {
                        originLocationCode: $("#txtDepartureAirportCode").val(),
                        destinationLocationCode: $("#txtDestinationAirportCode").val(),
                        departureDate: $("#txtDepartureDate").val(),
                        returnDate: $("#txtReturnDate").val(),
                        adults: $("#txtPassengersNumber").val(),
                        currencyCode: $("#cboCurrency").select2('data')[0].text
                    },
                    dataType: 'json',
                    cache: false,
                    success: function (data) {
                        ClosePleaseWait();
                    }
            });
    }

    function validate()
    {
        if ($("#txtDepartureAirportCode").val() == "") {
            return "Enter the code of departure airport!";
        }
        else if ($("#txtDestinationAirportCode").val() == "") {
            return "Enter the code of destination airport!";
        }
        else if ($("#txtDepartureDate").val() == "") {
            return "Enter the departure date value!";
        }
        else if ($("#txtPassengersNumber").val() == "") {
            return "Enter the value of the number of passengers!";
        }
        else
            return "";
    }

    $(document).ready(function ($) {
        readForComboAndSetValue('@Globals.GetAjaxPath(AjaxPath.FlightOfferGetCurrencyForCombo)', 'cboCurrency', false);

        $('#dtFlightOffers').DataTable({
            paging: false,
            info: false,
            ordering: true,
            deferRender: true,
            columns: [
                { width: "30px" },
                { width: "30px" },
                { width: "40px" },
                { width: "40px" },
                { width: "30px" },
                { width: "30px" },
                { width: "30px" },
                { width: "20px" },
                { width: "30px" }
            ],
            data: []
        });

    }).on("click", "#btnClear", function (e) {
        clearFields();

    }).on("click", "#btnSearch", function (e) {
        flightOfferSearch();

    }).on("click", "#btnSynchronizeData", function (e) {
        flightOfferSynchronize();

    });
</script>
}